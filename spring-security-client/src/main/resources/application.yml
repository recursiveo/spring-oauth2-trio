spring:
  datasource:
    url: jdbc:mysql://localhost:3306/oauth2_test
    username: root
    password: root
  jpa:
    show-sql: false
    open-in-view: false
    hibernate:
      ddl-auto: create-drop
  security:
    oauth2:
      client:
        registration:
          api-client-oidc:
            provider: spring
            client-id: api-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://127.0.0.1:8080/login/oauth2/code/{registrationId}"
            scope: openid
            client-name: api-client-oidc
          api-client-authorization-code:
            provider: spring
            client-id: api-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://127.0.0.1:8080/authorized"
            scope: api.read
            client-name: api-client-authorization-code
          api-client-client-credentials:
            provider: spring
            client-id: api-client
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: api.read
            client-name: api-client-client-credentials
        provider:
          spring:
            issuer-uri: http://oauth2-server:9000


rsa:
  public-key: classpath:/keys/key.pub
  private-key: classpath:/keys/key.priv